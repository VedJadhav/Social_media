{"ast":null,"code":"var _jsxFileName = \"/Users/vedjadhav/social-media-frontend/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nconst API_URL = \"http://127.0.0.1:8000\"; // Ensure this matches your FastAPI backend URL\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [newPost, setNewPost] = useState({\n    user: \"\",\n    content: \"\"\n  });\n\n  // Fetch posts from FastAPI when component loads\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  const fetchPosts = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/posts`);\n      setPosts(response.data);\n    } catch (error) {\n      console.error(\"Error fetching posts:\", error);\n      alert(\"Failed to fetch posts. Check if backend is running.\");\n    }\n  };\n\n  // Handle adding a new post\n  const handlePostSubmit = async e => {\n    e.preventDefault();\n    if (!newPost.user || !newPost.content) {\n      alert(\"Fields cannot be empty!\");\n      return;\n    }\n    try {\n      await axios.post(`${API_URL}/posts`, newPost);\n      setNewPost({\n        user: \"\",\n        content: \"\"\n      }); // Reset form\n      fetchPosts(); // Refresh posts\n    } catch (error) {\n      console.error(\"Error adding post:\", error);\n      alert(\"Error adding post. Check backend logs.\");\n    }\n  };\n\n  // Handle Like Function\n  const handleLike = async postId => {\n    try {\n      await axios.post(`${API_URL}/posts/${postId}/like`);\n      fetchPosts();\n    } catch (error) {\n      console.error(\"Error liking post:\", error);\n      alert(\"Error liking post. Check backend logs.\");\n    }\n  };\n\n  // Handle Comment Function\n  const handleComment = async (postId, text, setCommentText) => {\n    if (!text.trim()) return;\n    try {\n      await axios.post(`${API_URL}/posts/${postId}/comment`, {\n        user: \"Guest\",\n        text\n      });\n      setCommentText(\"\"); // Clear input\n      fetchPosts();\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n      alert(\"Error adding comment. Check backend logs.\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"20px\",\n      maxWidth: \"600px\",\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Social Media Platform\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handlePostSubmit,\n    style: {\n      marginBottom: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Your Name\",\n    value: newPost.user,\n    onChange: e => setNewPost({\n      ...newPost,\n      user: e.target.value\n    }),\n    required: true,\n    style: {\n      display: \"block\",\n      width: \"100%\",\n      marginBottom: \"10px\",\n      padding: \"8px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"What's on your mind?\",\n    value: newPost.content,\n    onChange: e => setNewPost({\n      ...newPost,\n      content: e.target.value\n    }),\n    required: true,\n    style: {\n      display: \"block\",\n      width: \"100%\",\n      marginBottom: \"10px\",\n      padding: \"8px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    style: {\n      padding: \"10px 15px\",\n      cursor: \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Add Post\")), posts.length > 0 ? posts.map(post => {\n    const [commentText, setCommentText] = useState(\"\"); // Local state for each comment input\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: post.id,\n      style: {\n        border: \"1px solid #ddd\",\n        padding: \"10px\",\n        marginBottom: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, post.user), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, post.content), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, \"\\u2764\\uFE0F \", post.likes, \" Likes\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => handleLike(post.id),\n      style: {\n        marginRight: \"10px\",\n        cursor: \"pointer\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, \"Like\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Write a comment...\",\n      value: commentText,\n      onChange: e => setCommentText(e.target.value),\n      onKeyDown: e => {\n        if (e.key === \"Enter\") {\n          handleComment(post.id, commentText, setCommentText);\n        }\n      },\n      style: {\n        width: \"80%\",\n        padding: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    })), post.comments && post.comments.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, \"Comments:\"), post.comments.map((comment, index) => /*#__PURE__*/React.createElement(\"p\", {\n      key: index,\n      style: {\n        margin: \"5px 0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 23\n      }\n    }, comment.user, \":\"), \" \", comment.text))));\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, \"No posts yet. Add a post above!\"));\n};\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","axios","API_URL","App","posts","setPosts","newPost","setNewPost","user","content","fetchPosts","response","get","data","error","console","alert","handlePostSubmit","e","preventDefault","post","handleLike","postId","handleComment","text","setCommentText","trim","createElement","style","padding","maxWidth","margin","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","marginBottom","type","placeholder","value","onChange","target","required","display","width","cursor","length","map","commentText","key","id","border","likes","onClick","marginRight","marginTop","onKeyDown","comments","comment","index"],"sources":["/Users/vedjadhav/social-media-frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst API_URL = \"http://127.0.0.1:8000\"; // Ensure this matches your FastAPI backend URL\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [newPost, setNewPost] = useState({ user: \"\", content: \"\" });\n\n  // Fetch posts from FastAPI when component loads\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  const fetchPosts = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/posts`);\n      setPosts(response.data);\n    } catch (error) {\n      console.error(\"Error fetching posts:\", error);\n      alert(\"Failed to fetch posts. Check if backend is running.\");\n    }\n  };\n\n  // Handle adding a new post\n  const handlePostSubmit = async (e) => {\n    e.preventDefault();\n    if (!newPost.user || !newPost.content) {\n      alert(\"Fields cannot be empty!\");\n      return;\n    }\n    try {\n      await axios.post(`${API_URL}/posts`, newPost);\n      setNewPost({ user: \"\", content: \"\" }); // Reset form\n      fetchPosts(); // Refresh posts\n    } catch (error) {\n      console.error(\"Error adding post:\", error);\n      alert(\"Error adding post. Check backend logs.\");\n    }\n  };\n\n  // Handle Like Function\n  const handleLike = async (postId) => {\n    try {\n      await axios.post(`${API_URL}/posts/${postId}/like`);\n      fetchPosts();\n    } catch (error) {\n      console.error(\"Error liking post:\", error);\n      alert(\"Error liking post. Check backend logs.\");\n    }\n  };\n\n  // Handle Comment Function\n  const handleComment = async (postId, text, setCommentText) => {\n    if (!text.trim()) return;\n    try {\n      await axios.post(`${API_URL}/posts/${postId}/comment`, { user: \"Guest\", text });\n      setCommentText(\"\"); // Clear input\n      fetchPosts();\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n      alert(\"Error adding comment. Check backend logs.\");\n    }\n  };\n\n  return (\n    <div style={{ padding: \"20px\", maxWidth: \"600px\", margin: \"auto\" }}>\n      <h1>Social Media Platform</h1>\n\n      {/* New Post Form */}\n      <form onSubmit={handlePostSubmit} style={{ marginBottom: \"20px\" }}>\n        <input\n          type=\"text\"\n          placeholder=\"Your Name\"\n          value={newPost.user}\n          onChange={(e) => setNewPost({ ...newPost, user: e.target.value })}\n          required\n          style={{ display: \"block\", width: \"100%\", marginBottom: \"10px\", padding: \"8px\" }}\n        />\n        <textarea\n          placeholder=\"What's on your mind?\"\n          value={newPost.content}\n          onChange={(e) => setNewPost({ ...newPost, content: e.target.value })}\n          required\n          style={{ display: \"block\", width: \"100%\", marginBottom: \"10px\", padding: \"8px\" }}\n        ></textarea>\n        <button type=\"submit\" style={{ padding: \"10px 15px\", cursor: \"pointer\" }}>\n          Add Post\n        </button>\n      </form>\n\n      {/* Posts Section */}\n      {posts.length > 0 ? (\n        posts.map((post) => {\n          const [commentText, setCommentText] = useState(\"\"); // Local state for each comment input\n          return (\n            <div key={post.id} style={{ border: \"1px solid #ddd\", padding: \"10px\", marginBottom: \"10px\" }}>\n              <h3>{post.user}</h3>\n              <p>{post.content}</p>\n              <p>❤️ {post.likes} Likes</p>\n\n              {/* Like Button */}\n              <button onClick={() => handleLike(post.id)} style={{ marginRight: \"10px\", cursor: \"pointer\" }}>\n                Like\n              </button>\n\n              {/* Comment Section */}\n              <div style={{ marginTop: \"10px\" }}>\n                <input\n                  type=\"text\"\n                  placeholder=\"Write a comment...\"\n                  value={commentText}\n                  onChange={(e) => setCommentText(e.target.value)}\n                  onKeyDown={(e) => {\n                    if (e.key === \"Enter\") {\n                      handleComment(post.id, commentText, setCommentText);\n                    }\n                  }}\n                  style={{ width: \"80%\", padding: \"5px\" }}\n                />\n              </div>\n\n              {/* Display Comments */}\n              {post.comments && post.comments.length > 0 && (\n                <div style={{ marginTop: \"10px\" }}>\n                  <h4>Comments:</h4>\n                  {post.comments.map((comment, index) => (\n                    <p key={index} style={{ margin: \"5px 0\" }}>\n                      <strong>{comment.user}:</strong> {comment.text}\n                    </p>\n                  ))}\n                </div>\n              )}\n            </div>\n          );\n        })\n      ) : (\n        <p>No posts yet. Add a post above!</p>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}